name: Flask CI (uv)

on:
  push:
    branches: [main, master]

jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/actions/setup
      - run: uv lock --locked

  # linting:
  #   runs-on: ubuntu-latest
  #   needs: [lock_file]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/workflows/actions/setup
  #     - run: uvx ruff check .

  # formatting:
  #   runs-on: ubuntu-latest
  #   needs: [lock_file]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/workflows/actions/setup
  #     - run: uvx ruff format --check .
  
  build:
    name: Build
    needs: [lock_file]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: actions/checkout@v4
      - uses: ./.github/workflows/actions/setup

      - name: Sync dependencies
        run: uv sync

      - name: uv build
        run: uv build

  test:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: actions/checkout@v4
      - uses: ./.github/workflows/actions/setup

      - name: Sync dependencies
        run: uv sync

      - name: Run unit tests
        run: uv run python -m unittest discover -s tests

  deploy:
    name: Deploy
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: actions/checkout@v4
      - uses: ./.github/workflows/actions/setup

      - name: Sync dependencies
        run: uv sync

      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}